@model CangooruMVC.Models.RegisterModel
@{
    ViewBag.Title = "Cadastro";
}
<h2>
    @ViewBag.LegendTitle</h2>
@*<p>
    Use the form below to create a new account.
</p>
<p>
    Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength
    characters in length.
</p>*@
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.maskedinput-1.3.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.localization.messages_ptbr.js")" type="text/javascript"></script>
@using (Html.BeginForm(new { id = "registerForm" }))
{
    <div>
        @Html.ValidationSummary(true, "Falha no cadastro. Por favor, verifique os erros e tente novamente.")
    </div>
    <div>
        <fieldset>
            <legend>Acesso ao Site (Obrigat&oacute;rio)</legend>
            <div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.Email)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.Email)
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.ConfirmEmail)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.ConfirmEmail)
                    @Html.ValidationMessageFor(m => m.ConfirmEmail)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.Password)
                </div>
                <div class="editor-field">
                    @Html.PasswordFor(m => m.Password)
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.ConfirmPassword)
                </div>
                <div class="editor-field">
                    @Html.PasswordFor(m => m.ConfirmPassword)
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Detalhes do Usu&aacute;rio (Opcional)</legend>
            <div class="editor-label">
                @Html.LabelFor(m => m.Name)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Name)
                @Html.ValidationMessageFor(m => m.Name)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.BirthDate)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.BirthDate)
                @Html.ValidationMessageFor(m => m.BirthDate)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.CPF)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CPF)
                @Html.ValidationMessageFor(m => m.CPF)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Gender)
            </div>
            <div class="editor-field">
                @Html.Label("Masculino")
                @Html.RadioButtonFor(m => m.Gender, "Masculino", new { id = "Male" })
                @Html.Label("Feminino")
                @Html.RadioButtonFor(m => m.Gender, "Feminino", new { id = "Female" })
            </div>
        </fieldset>
    </div>
    <p class="p_btn">
        <input type="submit" value="Vamos lá!" class="form_btn" />
    </p>
}
<script type="text/javascript">
    $("#BirthDate").mask("99/99/9999");
    $("#CPF").mask("999.999.999-99");

    jQuery.extend(jQuery.validator.messages, {
        required: "Este campo &eacute; obrigat&oacute;rio.",
        remote: "Por favor, corrija este campo.",
        email: "Por favor, digite um endere&ccedil;o de e-mail v&aacute;lido.",
        url: "Por favor, digite uma URL v&aacute;lida.",
        date: "Por favor, digite uma data v&aacute;lida.",
        dateISO: "Por favor, digite uma data v&aacute;lida (ISO).",
        dateDE: "Bitte geben Sie ein gültiges Datum ein.",
        number: "Este campo s&oacute; aceita n&uacute;meros.",
        numberDE: "Bitte geben Sie eine Nummer ein.",
        digits: "Este campo s&oacute; aceita letras.",
        creditcard: "Por favor, digite um n&uacute;mero de cart&atilde;o de cr&eacute;dito v&aacute;lido.",
        equalTo: "Por favor, digite o mesmo valor novamente.",
        accept: "Por favor, digite um valor com uma extens&atilde;o v&aacute;lida.",
        maxlength: jQuery.validator.format("Por favor, digite n&atilde;o mais que {0} caracteres."),
        minlength: jQuery.validator.format("Por favor, digite ao menos {0} caracteres."),
        rangelength: jQuery.validator.format("Por favor, digite um valor entre {0} e {1} caracteres de comprimento."),
        range: jQuery.validator.format("Por favor, digite um valor entre {0} e {1}."),
        max: jQuery.validator.format("Por favor, digite um valor menor ou igual a {0}."),
        min: jQuery.validator.format("Por favor, digite um valor maior ou igual a {0}.")
    });

    jQuery.validator.addMethod("datePTBR", function (value) {
        return this.optional(element) || /^\d\d?\/\d\d?\/\d\d\d?\d?$/.test(value);
    }, "Por favor, forne&ccedil;a uma data v&aacute;lida.");

</script>
